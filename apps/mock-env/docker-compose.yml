services:
  # Hub Container - Redis API + Redis DB
  # Clients will connect directly to this service on port 8001
  hub:
    container_name: hub
    build:
      context: ../.. # Root of the monorepo
      dockerfile: ./apps/mock-env/Dockerfile.hub
    ports:
      - "8001:8001" # Redis API
      - "6380:6379" # Redis DB (mapped to different host port)
    environment:
      - PYTHONPATH=/app # Ensure core modules can be imported
    networks:
      - redis-network
    # Volumes removed - rebuild containers when code changes
    profiles:
      - local

  # Worker Containers
  worker1:
    container_name: worker1
    build:
      context: ../.. # Root of the monorepo
      dockerfile: ./apps/mock-env/Dockerfile.worker
    environment:
      - WORKER_ID=worker1
      - WORKER_REDIS_API_HOST=hub
      - WORKER_REDIS_API_PORT=8001
      - WORKER_USE_SSL=FALSE
      - WORKER_HEARTBEAT_INTERVAL=20
      - WORKER_LOG_LEVEL=INFO
      - WORKER_CONNECTORS=simulation
      - WORKER_SIMULATION_PROCESSING_TIME=1
      - WORKER_SIMULATION_STEPS=45
      - WORKER_COMFYUI_HOST=142.170.86.89
      - WORKER_COMFYUI_PORT=25883
      - WORKER_COMFYUI_USERNAME=sd
      - WORKER_COMFYUI_PASSWORD=UbjpkE6kwM
      - PYTHONPATH=/app # Ensure core modules can be imported/
    networks:
      - redis-network
    depends_on:
      - hub
    # Volumes removed - rebuild containers when code changes
    profiles:
      - local

  worker2:
    container_name: worker2
    build:
      context: ../.. # Root of the monorepo
      dockerfile: ./apps/mock-env/Dockerfile.worker
    environment:
      - WORKER_ID=worker2
      - WORKER_REDIS_API_HOST=hub
      - WORKER_REDIS_API_PORT=8001
      - WORKER_USE_SSL=FALSE
      - WORKER_HEARTBEAT_INTERVAL=20
      - WORKER_LOG_LEVEL=INFO
      - WORKER_CONNECTORS=simulation
      - WORKER_SIMULATION_PROCESSING_TIME=2
      - WORKER_SIMULATION_STEPS=45
      - WORKER_COMFYUI_HOST=142.170.86.89
      - WORKER_COMFYUI_PORT=25883
      - WORKER_COMFYUI_USERNAME=sd
      - WORKER_COMFYUI_PASSWORD=UbjpkE6kwM
      - PYTHONPATH=/app # Ensure core modules can be importe
    networks:
      - redis-network
    depends_on:
      - hub
    # Volumes removed - rebuild containers when code changes
    profiles:
      - local

  worker3:
    container_name: worker3
    build:
      context: ../.. # Root of the monorepo
      dockerfile: ./apps/mock-env/Dockerfile.worker
    environment:
      - WORKER_ID=worker3
      - WORKER_REDIS_API_HOST=hub
      - WORKER_REDIS_API_PORT=8001
      - WORKER_USE_SSL=FALSE
      - WORKER_HEARTBEAT_INTERVAL=20
      - WORKER_LOG_LEVEL=INFO
      - WORKER_CONNECTORS=simulation,comfyui
      - WORKER_SIMULATION_JOB_TYPE=simulation
      - WORKER_SIMULATION_PROCESSING_TIME=4
      - WORKER_SIMULATION_STEPS=45
      - WORKER_COMFYUI_HOST=142.170.86.89
      - WORKER_COMFYUI_PORT=25883
      - WORKER_COMFYUI_USERNAME=sd
      - WORKER_COMFYUI_PASSWORD=UbjpkE6kwM
      - PYTHONPATH=/app # Ensure core modules can be importe
    networks:
      - redis-network
    depends_on:
      - hub
    # Volumes removed - rebuild containers when code changes
    profiles:
      - local

  worker4:
    container_name: worker4
    build:
      context: ../.. # Root of the monorepo
      dockerfile: ./apps/mock-env/Dockerfile.worker
    environment:
      - WORKER_ID=worker4
      - WORKER_REDIS_API_HOST=hub
      - WORKER_REDIS_API_PORT=8001
      - WORKER_USE_SSL=FALSE
      - WORKER_HEARTBEAT_INTERVAL=20
      - WORKER_LOG_LEVEL=INFO
      - WORKER_CONNECTORS=simulation,comfyui,a1111
      - WORKER_SIMULATION_PROCESSING_TIME=8
      - WORKER_SIMULATION_STEPS=45
      - WORKER_COMFYUI_HOST=142.170.86.89
      - WORKER_COMFYUI_PORT=25883
      - WORKER_A1111_HOST=142.170.86.89
      - WORKER_A1111_PORT=25805
      - WORKER_COMFYUI_USERNAME=sd
      - WORKER_COMFYUI_PASSWORD=UbjpkE6kwM
      - PYTHONPATH=/app # Ensure core modules can be importe
    networks:
      - redis-network
    depends_on:
      - hub
    # Volumes removed - rebuild containers when code changes
    profiles:
      - local

  # Worker Containers
  worker1r:
    container_name: worker1r
    build:
      context: ../.. # Root of the monorepo
      dockerfile: ./apps/mock-env/Dockerfile.worker
    environment:
      - WORKER_ID=worker1r
      - WORKER_REDIS_API_HOST=redisserver-production.up.railway.app
      - WORKER_USE_SSL=FALSE
      - WORKER_HEARTBEAT_INTERVAL=20
      - WORKER_LOG_LEVEL=INFO
      - WORKER_CONNECTORS=simulation
      - WORKER_SIMULATION_PROCESSING_TIME=1
      - WORKER_SIMULATION_STEPS=100
      - PYTHONPATH=/app # Ensure core modules can be importe
    # env_file:
    #   - ../../worker/.env
    networks:
      - redis-network
    # Volumes removed - rebuild containers when code changes
    profiles:
      - remote

  worker2r:
    container_name: worker2r
    build:
      context: ../.. # Root of the monorepo
      dockerfile: ./apps/mock-env/Dockerfile.worker
    environment:
      - WORKER_ID=worker2r
      - WORKER_REDIS_API_HOST=redisserver-production.up.railway.app
      - WORKER_USE_SSL=FALSE
      - WORKER_HEARTBEAT_INTERVAL=20
      - WORKER_LOG_LEVEL=INFO
      - WORKER_CONNECTORS=simulation
      - WORKER_SIMULATION_PROCESSING_TIME=2
      - WORKER_SIMULATION_STEPS=100
      - PYTHONPATH=/app # Ensure core modules can be importe
    # env_file:
    #   - ../../worker/.env
    networks:
      - redis-network
    # Volumes removed - rebuild containers when code changes
    profiles:
      - remote

  worker3r:
    container_name: worker3r
    build:
      context: ../.. # Root of the monorepo
      dockerfile: ./apps/mock-env/Dockerfile.worker
    environment:
      - WORKER_ID=worker3r
      - WORKER_REDIS_API_HOST=redisserver-production.up.railway.app
      - WORKER_USE_SSL=FALSE
      - WORKER_HEARTBEAT_INTERVAL=20
      - WORKER_LOG_LEVEL=INFO
      - WORKER_CONNECTORS=simulation
      - WORKER_SIMULATION_PROCESSING_TIME=4
      - WORKER_SIMULATION_STEPS=100
      - PYTHONPATH=/app # Ensure core modules can be importe
    # env_file:
    #   - ../../worker/.env
    networks:
      - redis-network
    # Volumes removed - rebuild containers when code changes
    profiles:
      - remote

  worker4r:
    container_name: worker4r
    build:
      context: ../.. # Root of the monorepo
      dockerfile: ./apps/mock-env/Dockerfile.worker
    environment:
      - WORKER_ID=worker4r
      - WORKER_REDIS_API_HOST=redisserver-production.up.railway.app
      - WORKER_USE_SSL=FALSE
      - WORKER_HEARTBEAT_INTERVAL=20
      - WORKER_LOG_LEVEL=INFO
      - WORKER_CONNECTORS=simulation
      - WORKER_SIMULATION_PROCESSING_TIME=8
      - WORKER_SIMULATION_STEPS=100
      - PYTHONPATH=/app # Ensure core modules can be importe
    # env_file:
    #   - ../../worker/.env
    networks:
      - redis-network
    # Volumes removed - rebuild containers when code changes
    profiles:
      - remote

networks:
  redis-network:
    driver: bridge
