services:
  # Hub Container - Redis API + Redis DB
  # Clients will connect directly to this service on port 8001
  hub:
    container_name: hub
    build:
      context: ../.. # Root of the monorepo
      dockerfile: ./apps/mock-env/Dockerfile.hub
    ports:
      - "8001:8001" # Redis API
      - "6380:6379" # Redis DB (mapped to different host port)
    environment:
      - PYTHONPATH=/app # Ensure core modules can be imported
    env_file:
      - ../../hub/.env
    networks:
      - redis-network
    # Volumes removed - rebuild containers when code changes
    profiles:
      - dev

  # Worker Containers
  worker1:
    container_name: worker1
    build:
      context: ../.. # Root of the monorepo
      dockerfile: ./apps/mock-env/Dockerfile.worker
    environment:
      - WORKER_ID=worker1
      - CONNECTORS=image_processing,simulation
      - PYTHONPATH=/app # Ensure core modules can be imported
    env_file:
      - ../../worker/.env
    networks:
      - redis-network
    depends_on:
      - hub
    # Volumes removed - rebuild containers when code changes
    profiles:
      - dev

  worker2:
    container_name: worker2
    build:
      context: ../.. # Root of the monorepo
      dockerfile: ./apps/mock-env/Dockerfile.worker
    environment:
      - CONNECTORS=image_processing,simulation
      - WORKER_ID=worker2
      - PYTHONPATH=/app # Ensure core modules can be imported
    env_file:
      - ../../worker/.env
    networks:
      - redis-network
    depends_on:
      - hub
    # Volumes removed - rebuild containers when code changes
    profiles:
      - dev

  worker3:
    container_name: worker3
    build:
      context: ../.. # Root of the monorepo
      dockerfile: ./apps/mock-env/Dockerfile.worker
    environment:
      - CONNECTORS=simulation,image_processing
      - WORKER_ID=worker3
      - PYTHONPATH=/app # Ensure core modules can be imported
    env_file:
      - ../../worker/.env
    networks:
      - redis-network
    depends_on:
      - hub
    # Volumes removed - rebuild containers when code changes
    profiles:
      - dev

  worker4:
    container_name: worker4
    build:
      context: ../.. # Root of the monorepo
      dockerfile: ./apps/mock-env/Dockerfile.worker
    environment:
      - CONNECTORS=simulation,image_processing
      - WORKER_ID=worker4
      - PYTHONPATH=/app # Ensure core modules can be imported
    env_file:
      - ../../worker/.env
    networks:
      - redis-network
    depends_on:
      - hub
    # Volumes removed - rebuild containers when code changes
    profiles:
      - dev

networks:
  redis-network:
    driver: bridge
