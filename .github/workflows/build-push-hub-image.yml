name: Build and Push Hub Docker Image

on:
  push:
    branches: [ main, master ]
    paths:
      - 'hub/**'
      - 'core/**'
      - 'apps/prod_redis_server/**'
  workflow_dispatch:  # Allow manual triggering

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Get version info
        id: version
        run: |
          COMMIT_SHA=$(git rev-parse --short HEAD)
          TIMESTAMP=$(date +%Y%m%d%H%M%S)
          VERSION="${TIMESTAMP}-${COMMIT_SHA}"
          echo "version=${VERSION}" >> $GITHUB_OUTPUT

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./apps/prod_redis_server/Dockerfile
          push: true
          tags: |
            emprops/redis_server:latest
            emprops/redis_server:${{ steps.version.outputs.version }}
          cache-from: type=registry,ref=emprops/redis_server:buildcache
          cache-to: type=registry,ref=emprops/redis_server:buildcache,mode=max

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: hub-${{ steps.version.outputs.version }}
          name: Hub Server ${{ steps.version.outputs.version }}
          body: |
            Redis Hub Server Docker Image
            
            Built from commit: ${{ github.sha }}
            Timestamp: ${{ steps.version.outputs.version }}
            
            Docker image: `emprops/redis_server:${{ steps.version.outputs.version }}`
            
            To deploy:
            ```
            # You can use either the version-specific tag
            docker pull emprops/redis_server:${{ steps.version.outputs.version }}
            
            # Or the latest tag
            docker pull emprops/redis_server:latest
            ```
            
            **Important GitHub Release Note:**
            Unlike the worker package, there is NO `hub-latest` GitHub release/tag.
            Always use the specific versioned GitHub release shown above (`hub-${{ steps.version.outputs.version }}`).
            The `worker-latest` GitHub tag is reserved for the worker package only.
            
            Note the distinction: The Docker image has both versioned and 'latest' tags,
            but the GitHub release only has versioned tags.
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
